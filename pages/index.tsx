import AccountIcon from "@/components/AccountIcon";
import BottomMenu from "@/components/BottomMenu";
import CategoryIcon from "@/components/CategoryIcon";
import Header from "@/components/Header";
import Loading from "@/components/Loading";
import { isCategoryColor } from "@/utils/categoryList";
import dateFormat from "@/utils/dateFormat";
import {
  Avatar,
  Box,
  ListItemAvatar,
  ListItemIcon,
  Paper,
  Typography,
} from "@mui/material";
import Grid from "@mui/material/Grid";
import List from "@mui/material/List";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemText from "@mui/material/ListItemText";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";

export default function Home() {
  const [data, setData] = useState([]);
  useEffect(() => {
    fetch(process.env.NEXT_PUBLIC_ALL_DATA_URL!)
      .then((res) => res.json())
      .then((data) => setData(data));
  }, []);
  return (
    <>
      <Head>
        <title>zaim</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header titleName="履歴"></Header>
      {data ? (
        <Grid item>
          <List>
            {data.map(
              (item: any, index: any, array: any) =>
                ["支出", "収入"].includes(item.mode) && (
                  <Box key={index}>
                    {index > 0 && item.date === array[index - 1].date ? null : (
                      <Typography sx={index > 0 ? { mt: 5, mx: 1 } : { mx: 1 }}>
                        {dateFormat(item.date)}
                      </Typography>
                    )}
                    <Link
                      as={`/${item.id}`}
                      href={{
                        pathname: `/${item.id}`,
                        query: {
                          id: item.id,
                          mode: item.mode,
                          date: item.date,
                          category: item.category,
                          genre: item.genre,
                          from_account: item.from_account,
                          to_account: item.to_account,
                          amount: item.amount,
                        },
                      }}
                      style={{ textDecoration: "none" }}
                      passHref
                    >
                      <Paper sx={{ mx: 1, mb: 2 }}>
                        <ListItemButton>
                          <ListItemAvatar>
                            <Avatar
                              sx={{ bgcolor: isCategoryColor(item.category) }}
                            >
                              <CategoryIcon category={item.category} />
                            </Avatar>
                          </ListItemAvatar>
                          <ListItemText
                            primary={
                              <Typography
                                variant="h6"
                                color={
                                  item.mode === "収入" ? "#48c44e" : undefined
                                }
                              >
                                ¥ {item.amount.toLocaleString()}
                              </Typography>
                            }
                            secondary={
                              item.mode === "収入" ? item.category : item.genre
                            }
                          />
                          <ListItemIcon sx={{ justifyContent: "right" }}>
                            <AccountIcon
                              mode={item.mode}
                              from_account={item.from_account}
                              to_account={item.to_account}
                            />
                          </ListItemIcon>
                        </ListItemButton>
                      </Paper>
                    </Link>
                  </Box>
                )
            )}
          </List>
        </Grid>
      ) : (
        <Loading></Loading>
      )}
      <BottomMenu menuList={["履歴", "記録"]}></BottomMenu>
    </>
  );
}
